package pojo;

// Generated 03-avr.-2014 20:24:12 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Reservation generated by hbm2java
 */
@Entity
@Table(name = "reservation", catalog = "gestion_gite")
public class Reservation implements java.io.Serializable {

	private Integer idReservation;
	private Client client;
	private Date dateReservation;
	private Date datedebutLocation;
	private boolean statut;
	private boolean caution;
	private Set<Detailreservation> detailreservations = new HashSet<Detailreservation>(
			0);
	private Set<Facture> factures = new HashSet<Facture>(0);

	public Reservation() {
	}

	public Reservation(Client client, Date dateReservation,
			Date datedebutLocation, boolean statut, boolean caution) {
		this.client = client;
		this.dateReservation = dateReservation;
		this.datedebutLocation = datedebutLocation;
		this.statut = statut;
		this.caution = caution;
	}

	public Reservation(Client client, Date dateReservation,
			Date datedebutLocation, boolean statut, boolean caution,
			Set<Detailreservation> detailreservations, Set<Facture> factures) {
		this.client = client;
		this.dateReservation = dateReservation;
		this.datedebutLocation = datedebutLocation;
		this.statut = statut;
		this.caution = caution;
		this.detailreservations = detailreservations;
		this.factures = factures;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idReservation", unique = true, nullable = false)
	public Integer getIdReservation() {
		return this.idReservation;
	}

	public void setIdReservation(Integer idReservation) {
		this.idReservation = idReservation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idClient", nullable = false)
	public Client getClient() {
		return this.client;
	}

	public void setClient(Client client) {
		this.client = client;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dateReservation", nullable = false, length = 19)
	public Date getDateReservation() {
		return this.dateReservation;
	}

	public void setDateReservation(Date dateReservation) {
		this.dateReservation = dateReservation;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "datedebutLocation", nullable = false, length = 19)
	public Date getDatedebutLocation() {
		return this.datedebutLocation;
	}

	public void setDatedebutLocation(Date datedebutLocation) {
		this.datedebutLocation = datedebutLocation;
	}

	@Column(name = "statut", nullable = false)
	public boolean isStatut() {
		return this.statut;
	}

	public void setStatut(boolean statut) {
		this.statut = statut;
	}

	@Column(name = "caution", nullable = false)
	public boolean isCaution() {
		return this.caution;
	}

	public void setCaution(boolean caution) {
		this.caution = caution;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "reservation")
	public Set<Detailreservation> getDetailreservations() {
		return this.detailreservations;
	}

	public void setDetailreservations(Set<Detailreservation> detailreservations) {
		this.detailreservations = detailreservations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "reservation")
	public Set<Facture> getFactures() {
		return this.factures;
	}

	public void setFactures(Set<Facture> factures) {
		this.factures = factures;
	}

}
