package pojo;

// Generated 03-avr.-2014 20:24:12 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Client generated by hbm2java
 */
@Entity
@Table(name = "client", catalog = "gestion_gite", uniqueConstraints = @UniqueConstraint(columnNames = "email"))
public class Client implements java.io.Serializable {

	private Integer idClient;
	private Adresse adresse;
	private String nom;
	private String prenom;
	private String email;
	private String telephone;
	private String profession;
	private Date dateEncodage;
	private boolean statut;
	private Set<Commentaire> commentaires = new HashSet<Commentaire>(0);
	private Set<Facture> factures = new HashSet<Facture>(0);
	private Set<Reservation> reservations = new HashSet<Reservation>(0);
	private Authentification authentification;

	public Client() {
	}

	public Client(Adresse adresse, String nom, String prenom, String email,
			String telephone, String profession, Date dateEncodage,
			boolean statut) {
		this.adresse = adresse;
		this.nom = nom;
		this.prenom = prenom;
		this.email = email;
		this.telephone = telephone;
		this.profession = profession;
		this.dateEncodage = dateEncodage;
		this.statut = statut;
	}

	public Client(Adresse adresse, String nom, String prenom, String email,
			String telephone, String profession, Date dateEncodage,
			boolean statut, Set<Commentaire> commentaires,
			Set<Facture> factures, Set<Reservation> reservations,
			Authentification authentification) {
		this.adresse = adresse;
		this.nom = nom;
		this.prenom = prenom;
		this.email = email;
		this.telephone = telephone;
		this.profession = profession;
		this.dateEncodage = dateEncodage;
		this.statut = statut;
		this.commentaires = commentaires;
		this.factures = factures;
		this.reservations = reservations;
		this.authentification = authentification;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idClient", unique = true, nullable = false)
	public Integer getIdClient() {
		return this.idClient;
	}

	public void setIdClient(Integer idClient) {
		this.idClient = idClient;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idAdresse", nullable = false)
	public Adresse getAdresse() {
		return this.adresse;
	}

	public void setAdresse(Adresse adresse) {
		this.adresse = adresse;
	}

	@Column(name = "nom", nullable = false, length = 100)
	public String getNom() {
		return this.nom;
	}

	public void setNom(String nom) {
		this.nom = nom;
	}

	@Column(name = "prenom", nullable = false, length = 50)
	public String getPrenom() {
		return this.prenom;
	}

	public void setPrenom(String prenom) {
		this.prenom = prenom;
	}

	@Column(name = "email", unique = true, nullable = false, length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "telephone", nullable = false, length = 15)
	public String getTelephone() {
		return this.telephone;
	}

	public void setTelephone(String telephone) {
		this.telephone = telephone;
	}

	@Column(name = "profession", nullable = false, length = 100)
	public String getProfession() {
		return this.profession;
	}

	public void setProfession(String profession) {
		this.profession = profession;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dateEncodage", nullable = false, length = 19)
	public Date getDateEncodage() {
		return this.dateEncodage;
	}

	public void setDateEncodage(Date dateEncodage) {
		this.dateEncodage = dateEncodage;
	}

	@Column(name = "statut", nullable = false)
	public boolean isStatut() {
		return this.statut;
	}

	public void setStatut(boolean statut) {
		this.statut = statut;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<Commentaire> getCommentaires() {
		return this.commentaires;
	}

	public void setCommentaires(Set<Commentaire> commentaires) {
		this.commentaires = commentaires;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<Facture> getFactures() {
		return this.factures;
	}

	public void setFactures(Set<Facture> factures) {
		this.factures = factures;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<Reservation> getReservations() {
		return this.reservations;
	}

	public void setReservations(Set<Reservation> reservations) {
		this.reservations = reservations;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "client")
	public Authentification getAuthentification() {
		return this.authentification;
	}

	public void setAuthentification(Authentification authentification) {
		this.authentification = authentification;
	}

}
