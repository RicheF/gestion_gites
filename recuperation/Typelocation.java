package recuperation;

// Generated 03-avr.-2014 20:24:12 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Typelocation generated by hbm2java
 */
@Entity
@Table(name = "typelocation", catalog = "gestion_gite", uniqueConstraints = @UniqueConstraint(columnNames = "code"))
public class Typelocation implements java.io.Serializable {

	private Integer idTypeLocation;
	private Gite gite;
	private String dicriminator;
	private String code;
	private String standing;
	private int nbPlaces;
	private byte douche;
	private boolean salleBain;
	private boolean wc;
	private boolean cuisine;
	private boolean garage;
	private boolean sauna;
	private String commentaire;
	private int nbPieces;
	private int nbLits;
	private boolean animal;
	private Set<Detailreservation> detailreservations = new HashSet<Detailreservation>(
			0);
	private Set<Photolocation> photolocations = new HashSet<Photolocation>(0);
	private Set<Tarif> tarifs = new HashSet<Tarif>(0);

	public Typelocation() {
	}

	public Typelocation(Gite gite, String dicriminator, String code,
			String standing, int nbPlaces, byte douche, boolean salleBain,
			boolean wc, boolean cuisine, boolean garage, boolean sauna,
			String commentaire, int nbPieces, int nbLits, boolean animal) {
		this.gite = gite;
		this.dicriminator = dicriminator;
		this.code = code;
		this.standing = standing;
		this.nbPlaces = nbPlaces;
		this.douche = douche;
		this.salleBain = salleBain;
		this.wc = wc;
		this.cuisine = cuisine;
		this.garage = garage;
		this.sauna = sauna;
		this.commentaire = commentaire;
		this.nbPieces = nbPieces;
		this.nbLits = nbLits;
		this.animal = animal;
	}

	public Typelocation(Gite gite, String dicriminator, String code,
			String standing, int nbPlaces, byte douche, boolean salleBain,
			boolean wc, boolean cuisine, boolean garage, boolean sauna,
			String commentaire, int nbPieces, int nbLits, boolean animal,
			Set<Detailreservation> detailreservations,
			Set<Photolocation> photolocations, Set<Tarif> tarifs) {
		this.gite = gite;
		this.dicriminator = dicriminator;
		this.code = code;
		this.standing = standing;
		this.nbPlaces = nbPlaces;
		this.douche = douche;
		this.salleBain = salleBain;
		this.wc = wc;
		this.cuisine = cuisine;
		this.garage = garage;
		this.sauna = sauna;
		this.commentaire = commentaire;
		this.nbPieces = nbPieces;
		this.nbLits = nbLits;
		this.animal = animal;
		this.detailreservations = detailreservations;
		this.photolocations = photolocations;
		this.tarifs = tarifs;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idTypeLocation", unique = true, nullable = false)
	public Integer getIdTypeLocation() {
		return this.idTypeLocation;
	}

	public void setIdTypeLocation(Integer idTypeLocation) {
		this.idTypeLocation = idTypeLocation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idGite", nullable = false)
	public Gite getGite() {
		return this.gite;
	}

	public void setGite(Gite gite) {
		this.gite = gite;
	}

	@Column(name = "dicriminator", nullable = false, length = 10)
	public String getDicriminator() {
		return this.dicriminator;
	}

	public void setDicriminator(String dicriminator) {
		this.dicriminator = dicriminator;
	}

	@Column(name = "code", unique = true, nullable = false, length = 20)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "standing", nullable = false, length = 10)
	public String getStanding() {
		return this.standing;
	}

	public void setStanding(String standing) {
		this.standing = standing;
	}

	@Column(name = "nbPlaces", nullable = false)
	public int getNbPlaces() {
		return this.nbPlaces;
	}

	public void setNbPlaces(int nbPlaces) {
		this.nbPlaces = nbPlaces;
	}

	@Column(name = "douche", nullable = false)
	public byte getDouche() {
		return this.douche;
	}

	public void setDouche(byte douche) {
		this.douche = douche;
	}

	@Column(name = "salleBain", nullable = false)
	public boolean isSalleBain() {
		return this.salleBain;
	}

	public void setSalleBain(boolean salleBain) {
		this.salleBain = salleBain;
	}

	@Column(name = "wc", nullable = false)
	public boolean isWc() {
		return this.wc;
	}

	public void setWc(boolean wc) {
		this.wc = wc;
	}

	@Column(name = "cuisine", nullable = false)
	public boolean isCuisine() {
		return this.cuisine;
	}

	public void setCuisine(boolean cuisine) {
		this.cuisine = cuisine;
	}

	@Column(name = "garage", nullable = false)
	public boolean isGarage() {
		return this.garage;
	}

	public void setGarage(boolean garage) {
		this.garage = garage;
	}

	@Column(name = "sauna", nullable = false)
	public boolean isSauna() {
		return this.sauna;
	}

	public void setSauna(boolean sauna) {
		this.sauna = sauna;
	}

	@Column(name = "commentaire", nullable = false, length = 65535)
	public String getCommentaire() {
		return this.commentaire;
	}

	public void setCommentaire(String commentaire) {
		this.commentaire = commentaire;
	}

	@Column(name = "nbPieces", nullable = false)
	public int getNbPieces() {
		return this.nbPieces;
	}

	public void setNbPieces(int nbPieces) {
		this.nbPieces = nbPieces;
	}

	@Column(name = "nbLits", nullable = false)
	public int getNbLits() {
		return this.nbLits;
	}

	public void setNbLits(int nbLits) {
		this.nbLits = nbLits;
	}

	@Column(name = "animal", nullable = false)
	public boolean isAnimal() {
		return this.animal;
	}

	public void setAnimal(boolean animal) {
		this.animal = animal;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typelocation")
	public Set<Detailreservation> getDetailreservations() {
		return this.detailreservations;
	}

	public void setDetailreservations(Set<Detailreservation> detailreservations) {
		this.detailreservations = detailreservations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typelocation")
	public Set<Photolocation> getPhotolocations() {
		return this.photolocations;
	}

	public void setPhotolocations(Set<Photolocation> photolocations) {
		this.photolocations = photolocations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typelocation")
	public Set<Tarif> getTarifs() {
		return this.tarifs;
	}

	public void setTarifs(Set<Tarif> tarifs) {
		this.tarifs = tarifs;
	}

}
