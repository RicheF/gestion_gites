package recuperation;

// Generated 03-avr.-2014 20:24:12 by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Facture generated by hbm2java
 */
@Entity
@Table(name = "facture", catalog = "gestion_gite", uniqueConstraints = @UniqueConstraint(columnNames = "nrFacture"))
public class Facture implements java.io.Serializable {

	private Integer idFacture;
	private Client client;
	private Reservation reservation;
	private Date dateFacture;
	private String nrFacture;
	private boolean payer;
	private String modePaiement;
	private double montantTotal;

	public Facture() {
	}

	public Facture(Client client, Reservation reservation, Date dateFacture,
			String nrFacture, boolean payer, String modePaiement,
			double montantTotal) {
		this.client = client;
		this.reservation = reservation;
		this.dateFacture = dateFacture;
		this.nrFacture = nrFacture;
		this.payer = payer;
		this.modePaiement = modePaiement;
		this.montantTotal = montantTotal;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idFacture", unique = true, nullable = false)
	public Integer getIdFacture() {
		return this.idFacture;
	}

	public void setIdFacture(Integer idFacture) {
		this.idFacture = idFacture;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idClient", nullable = false)
	public Client getClient() {
		return this.client;
	}

	public void setClient(Client client) {
		this.client = client;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idReservation", nullable = false)
	public Reservation getReservation() {
		return this.reservation;
	}

	public void setReservation(Reservation reservation) {
		this.reservation = reservation;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dateFacture", nullable = false, length = 19)
	public Date getDateFacture() {
		return this.dateFacture;
	}

	public void setDateFacture(Date dateFacture) {
		this.dateFacture = dateFacture;
	}

	@Column(name = "nrFacture", unique = true, nullable = false, length = 10)
	public String getNrFacture() {
		return this.nrFacture;
	}

	public void setNrFacture(String nrFacture) {
		this.nrFacture = nrFacture;
	}

	@Column(name = "payer", nullable = false)
	public boolean isPayer() {
		return this.payer;
	}

	public void setPayer(boolean payer) {
		this.payer = payer;
	}

	@Column(name = "modePaiement", nullable = false, length = 10)
	public String getModePaiement() {
		return this.modePaiement;
	}

	public void setModePaiement(String modePaiement) {
		this.modePaiement = modePaiement;
	}

	@Column(name = "montantTotal", nullable = false, precision = 22, scale = 0)
	public double getMontantTotal() {
		return this.montantTotal;
	}

	public void setMontantTotal(double montantTotal) {
		this.montantTotal = montantTotal;
	}

}
